#!/bin/bash

################################################################################
# TITLE: TEchim - PART 4
# VERSION: 0.2.0 (dev)
# AUTHOR: Christoph Treiber, Waddell lab, University of Oxford
# DATE: 04/06/2019 (dd/mm/yyyy)
# DESCRIPTION: This script takes the in-silico reads from PART1 and re-runs the
# analysis on the IGE reference files generated by PART 3.
################################################################################

################################################################################
# REQUIREMENTS:
# - STAR (https://github.com/alexdobin/STAR)
# - blast (https://blast.ncbi.nlm.nih.gov/Blast.cgi)
# - samtools
################################################################################

################################################################################
################################################################################
# set parameters
wd=~
path_to_PART1_output=/PATH/TO/OUTPUT/
path_to_IGEref_CONTAINER=/PATH/TO/IGEref_CONTAINER/
SNa=NAME_OF_EXP					# sample name	
SNo=1							# sample number (use integer from 1-n)
LNo=1							# sequencing lane number (use integer from 1-n)
nc=1							# number of cores
################################################################################
################################################################################
# functions:

align_and_filter()
{
	echo " --> start mapping at ... $(date)" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
	# run STAR in chimera-mode
	STAR --runThreadN $nc \
		--genomeDir $path_to_IGEref_CONTAINER$SNa"_IGEref_CONTAINER/STAR_"$SNa"_IGEref" \
		--readFilesIn $1 $2 \
		--chimSegmentMin 20 \
		--chimOutType WithinBAM \
		--outSAMtype BAM SortedByCoordinate \
		--outFileNamePrefix $SNa"_IGEref_S"$SNo"_L"$LNo$"_out4_"	
	# extract only hits that cross IGE-GENE breakpoints. the awk commands remove IGE-IGE reads
	samtools view $SNa"_IGEref_S"$SNo"_L"$LNo$"_out4_"Aligned.sortedByCoord.out.bam | grep TEchr_ | awk '($7 != "=")' > $SNa"_IGEref_S"$SNo"_L"$LNo$"_out5_TExGENES.sam"
	mkdir $SNa"_IGEref_S"$SNo"_L"$LNo"_STAR"
	mv $SNa"_IGEref_S"$SNo"_L"$LNo$"_out4"* $SNa"_IGEref_S"$SNo"_L"$LNo"_STAR"/.
	if [ ! -s $SNa"_IGEref_S"$SNo"_L"$LNo$"_out5_TExGENES.sam" ]; then
		echo " #### ERROR: file does not have any TE-GENE brakpoint spanning reads!" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
		echo " --> exited at ... $(date)" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
		exit
	fi
	echo " ------ sample contains $(wc -l $SNa"_IGEref_S"$SNo"_L"$LNo$"_out5_TExGENES.sam" | awk '{print $1}') reads that span gene-TE breakpoint." >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
	echo " <-- done with mapping at ... $(date)" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
	echo "--------------------------------" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
}

blast_on_longreads ()
{
	echo " --> start BLAST at ... $(date)" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
	# extract readnames and remove duplicates
	awk '{print $1}' $1 | sort | uniq > $SNa"_IGEref_S"$SNo"_L"$LNo$"_out6_TExGENES_readnames.txt"
	# combine readnames with long sequences stored in the lookup file
	# LANG=en_EN is a bug-fix to make sort compatible with join
	LANG=en_EN join -1 1 -2 1 <(sort $SNa"_IGEref_S"$SNo"_L"$LNo$"_out6_TExGENES_readnames.txt") <(zcat < $2 ) > $SNa"_IGEref_S"$SNo"_L"$LNo$"_out7_TExGENES_longreads.tsv" && rm $SNa"_IGEref_S"$SNo"_L"$LNo$"_out6_TExGENES_readnames.txt"
	# the following while loop will add data to file using ">>". just as safety
	# precaution, this line makes sure no data with such a name exists
	rm -f $SNa"_IGEref_S"$SNo"_L"$LNo$"_out8_TExGENES_blastedreads_plusnohit.tsv"
	# loop through long sequences. two blast searches are performed, one on a
	# reference genome without TE sequences and another one on all TE sequences.
	# only the top hit is reported.
	while IFS=$' ' read -r readname sequence
	do	
		echo "${readname}" > var1
		echo "${sequence}" > var2
		echo "${sequence}" | blastn -db $path_to_IGEref_CONTAINER$SNa"_IGEref_CONTAINER/"$SNa"_IGEref.clean.noTEs.fa" -outfmt "6 qstart qend sseqid sstart send sstrand" -num_alignments 1 -num_threads $nc | head -n 1 > var3		
		if ! [ -s var3 ]; then echo "no-hit" > var3; fi
		echo "${sequence}" | blastn -db $path_to_IGEref_CONTAINER$SNa"_IGEref_CONTAINER/"$SNa"_IGEref.clean.onlyTEs.fa" -outfmt "6 qstart qend sseqid sstart send slen sstrand" -num_alignments 1 -num_threads $nc | head -n 1 > var4
		if ! [ -s var4 ]; then echo "no-hit" > var4; fi
		
		##### HERE: if readname sequence == blastn sequence, then discard
		
		paste var1 var2 var3 var4 >> $SNa"_IGEref_S"$SNo"_L"$LNo$"_out8_TExGENES_blastedreads_plusnohit.tsv"
		rm var*
	done < $SNa"_IGEref_S"$SNo"_L"$LNo$"_out7_TExGENES_longreads.tsv"
	# remove reads that did not give BLAST result
	grep -v no-hit $SNa"_IGEref_S"$SNo"_L"$LNo$"_out8_TExGENES_blastedreads_plusnohit.tsv" > $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv"
	echo " ------ BLAST results: $(wc -l $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" | awk '{print $1}') hits ($(grep no-hit $SNa"_IGEref_S"$SNo"_L"$LNo$"_out8_TExGENES_blastedreads_plusnohit.tsv" | wc -l | awk '{print $1}') no hit)" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
	rm -f $SNa"_IGEref_S"$SNo"_L"$LNo$"_out7_TExGENES_longreads.tsv"
	rm -f $SNa"_IGEref_S"$SNo"_L"$LNo$"_out8_TExGENES_blastedreads_plusnohit.tsv"
	echo " <-- done with BLAST at ... $(date)" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
	echo "--------------------------------" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
}

create_summary_table ()
{
	echo " --> start creating summary table at ... $(date)" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
	# determine whether the section that maps to the genome is the 5' or the 3' end
	# of the mRNA section:
	# 5'-######|GENE|TE|######-3' => PART5
	# 5'-######|TE|GENE|######-3' => PART3
	awk 'BEGIN {OFS = "\t"} {a = $3 ; b = $9 ; if (a < b) {print "PART5"} else {print "PART3"}}' < $1 > tmpfile.genepart
	# determine the precise breakpoint on the chromosome. this depends on  whether
	# the chromosomal part is PART5 or PART3
	awk 'BEGIN {OFS = "\t"} {a = $5; {print a}}' < $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" > tmpfile.chr
	awk 'BEGIN {OFS = "\t"} {a = $3 ; b = $9 ; c = $6 ; d = $7 ; if (a < b) {print d-1} else {print c-1}}' < $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" > tmpfile.breakpoint.chr.start
	awk 'BEGIN {OFS = "\t"} {a = $3 ; b = $9 ; c = $6 ; d = $7 ; if (a < b) {print d} else {print c}}' < $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" > tmpfile.breakpoint.chr.end
	# determine the precise breakpoint on the TE. this depends on  whether the TE
	# part is PART5 or PART3
	awk 'BEGIN {OFS = "\t"} {a = $3 ; b = $9 ; c = $13 ; d = $12 ; if (a < b) {print d} else {print c}}' < $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" > tmpfile.breakpoint.TE
	# determine the overlap between the two mapped sections of the long read
	awk 'BEGIN {OFS = "\t"} {a = $3 ; b = $9 ; c = $4 ; d = $10 ; if (a < b) {print b-c-1} else {print a-d-1}}' < $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" > tmpfile.uncertainty
	if [[ $stranded = "0" ]]; then
		awk -v s="$SNo" -v l="$LNo" 'BEGIN {OFS = "\t"} {
			a = $11
			gsub(/TEchr_/,"",a)
			if ($8 == "plus") {if ($15=="plus") {b = "forward"} else {b = "reverse"}} else {if ($15 == "plus") { b = "reverse" } else { b = "forward" }}
			if ($3 < $9) {print $1"|"a"|"b"|GENE-TE|S"s"|L"l} else {print $1"|"a"|"b"|TE-GENE|S"s"|L"l}
			}' < $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" > tmpfile.readname
			awk 'BEGIN {OFS = "\t"} {a = $1 ; {print "+"}}' < $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" > tmpfile.breakpoint.chr.strand
	else
	awk -v s="$SNo" -v l="$LNo" 'BEGIN {OFS = "\t"} {
		a = $11
		gsub(/TEchr_/,"",a)
		b = $15
		c = $3
		d = $9
		e = $1
		if (c < d) {print e"|"a"|"b"|GENE-TE|S"s"|L"l} else {print e"|"a"|"b"|TE-GENE|S"s"|L"l}
		}' < $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" > tmpfile.readname
		awk 'BEGIN {OFS = "\t"} {a = $8 ; if (a == "plus") {print "+"} else {print "-"}}' < $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" > tmpfile.breakpoint.chr.strand
	fi
	awk 'BEGIN {OFS = "\t"} {a = $1 ; {print "."}}' < $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" > tmpfile.score
	paste -d'|' tmpfile.readname tmpfile.breakpoint.TE tmpfile.uncertainty > tmpfile.readname.extended
	paste -d'\t' tmpfile.chr tmpfile.breakpoint.chr.start tmpfile.breakpoint.chr.end tmpfile.readname.extended tmpfile.score tmpfile.breakpoint.chr.strand > $SNa"_IGEref_S"$SNo"_L"$LNo$"_out10_breakpoints.bed"
	#paste -d'\t' $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" tmpfile.breakpoint.chr.end tmpfile.breakpoint.TE tmpfile.uncertainty > $SNa"_IGEref_S"$SNo"_L"$LNo$"_out11_combined_results.tsv" &&
	rm tmpfile.*
	echo " <-- all done at ... $(date)" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
	echo "================================" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
}

################################################################################
################################################################################
# execute:

# change to wd
cd $wd
# change to folder for sample
if [ ! -d "IGE_"$SNa"_S"$SNo"_L"$LNo ]; then
	mkdir "IGE_"$SNa"_S"$SNo"_L"$LNo
fi
cd "IGE_"$SNa"_S"$SNo"_L"$LNo
# create .log file
logname=$(date | awk '{gsub(/\:/,"-",$5); print $4$3$2"_"$5}')
echo "====================" > $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo "|| TEchim - PART4 || " >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo "====================" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo "Parameters:" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo "Working directory:" "$wd/$SNa"_S"$SNo"_L"$LNo" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo "Location of PART1 output:" "$path_to_PART1_output" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo "Location of IGEref CONTAINER:" "$path_to_IGEref_CONTAINER" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo "Sample name:" "$SNa" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo "Sample number:" "$SNo" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo "Sequencing lane number:" "$SNo" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo "--------------------------------" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo " --> starting at ... $(date)" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"
echo "--------------------------------" >> $SNa"_IGEref_S"$SNo"_L"$LNo"_"$logname".log"

align_and_filter $path_to_PART1_output$SNa"_S"$SNo"_L"$LNo"/"$SNa"_S"$SNo"_L"$LNo$"_out3_1.fasta" $path_to_PART1_output$SNa"_S"$SNo"_L"$LNo"/"$SNa"_S"$SNo"_L"$LNo$"_out3_2.fasta"

blast_on_longreads $SNa"_IGEref_S"$SNo"_L"$LNo$"_out5_TExGENES.sam" $path_to_PART1_output$SNa"_S"$SNo"_L"$LNo"/"$SNa"_S"$SNo"_L"$LNo$"_LOOKUP.sorted.tsv.gz" &&\
	rm $SNa"_IGEref_S"$SNo"_L"$LNo$"_out5_TExGENES.sam"

create_summary_table $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv" &&\
	rm $SNa"_IGEref_S"$SNo"_L"$LNo$"_out9_TExGENES_blastedreads.tsv"
